#include "subarctic/pinctrl.h"
#include "bone/pins.h"

// disable conflicting cape-universal nodes

USES_PIN( P9_17 );  // cs 0
USES_PIN( P9_18 );  // data out
USES_PIN( P9_21 );  // data in
USES_PIN( P9_22 );  // clk

// XXX apparently this doesn't work
//&spi0 {
//	spi0channel@0 {  status = "disabled";  };
//	spi0channel@1 {  status = "disabled";  };
//};

// setup pinmux and enable controller

&spi0 {
	pinctrl-names = "default";
	pinctrl-0 = <&spi0_pins>;

	ti,spi-num-cs = <2>;

	status = "okay";
};

&am33xx_pinmux {
	spi0_pins: spi0 {
		pinctrl-single,pins = <
			PIN_PULLUP( P9_22, 0 )  // clk
			PIN_PULLUP( P9_21, 0 )  // data in
			PIN_PULLUP( P9_18, 0 )  // data out
			PIN_PULLUP( P9_17, 0 )  // cs 0
		>;
	};
};

// declare connected device (example)

&spi0 {
	// note: consider giving the node a descriptive name like flash@0 or
	// whatever to make it easier to identify.  You can even use a tiny
	// udev rule to then automatically make a symlink like /dev/spi/flash

	// XXX for now, use same names as cape-universal for compatibility
	spi0channel@0 {
		reg = <0>;
		compatible = "spidev";

		// XXX replace by actual max freq of device
		spi-max-frequency = <48000000>;

		// this select SPI mode 3
		spi-cpol;
		spi-cpha;
	};
};
