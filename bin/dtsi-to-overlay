#!/usr/bin/perl

use v5.16;
use strict;
use warnings qw( FATAL all );
use autodie;

print <<'END';
# 1 "<dtsi-to-overlay>"
/dts-v1/;
/plugin/;
END

my $n = 0;
my $inside = 0;
my $inprop = 0;
my( $line, $file ) = ( 0, '-' );

sub fail {  die $_, "$file:$line: @_\n"  }

my $nameRE = qr/[\w.,+*#@-]+/;
my $pathRE = qr!/|(?:/$nameRE)+!;

if( @ARGV ) {
	my $identifier = shift @ARGV;
	$identifier =~ s!/!#!g;
	if( $identifier =~ /^$nameRE\z/ ) {
		say "/ { fragment\@$n { target-path = \"/chosen\"; __overlay__ {";
		say " overlays { $identifier = \"" . localtime . "\"; };";
		say "}; }; };";
		++$n;
	} else {
		warn "Invalid overlay identifier: '\Q$identifier\E'\n";
	}
}

# this assumes input is CPP processed and properly indented
while( <> ) {
	++$line;
	next if /^\s*\z/;

	if( /^# (\d+) "([^"]+)"(?: \d+)?\s*\z/ ) {
		( $line, $file ) = ( $1-1, $2 );
		next;
	}

	if( $inside ) {
		unless( /^\s/ ) {
			/^\};\s*\z/ or fail "Expecting };";
			$_ = "}; }; };\n";
			$inside = 0;
		}
		next;
	}

	if( $inprop ) {
		/^\s/ or fail "Parse error";
	} elsif( s!^($nameRE\s*=)!/ { $1! ) {
		$inprop = 1;
	}

	if( $inprop ) {
		$inprop = 0  if s/;\s*\z/; };\n/;
		next;
	}

	my $oneliner;
	if( /^(&\w+)\s*\{(?:((?:[^{}]+|\{(?-1)\})*+)\};)?\s*\z/ ) {
		$_ = "target = <$1>";
		$oneliner = $2;

	} elsif( m!^(?|&\{($pathRE)\}|($pathRE))\s*\{(?:((?:[^{}]+|\{(?-1)\})*+)\};)?\s*\z! ) {
		$_ = "target-path = \"$1\"";
		$oneliner = $2;

	} else {
		fail "Parse error";
	}

	$_ = "/ { fragment\@$n { $_; __overlay__ {\n";
	s/\n\z/$oneliner}; }; };\n/  if defined $oneliner;
	++$n;
	$inside = ! defined $oneliner;
} continue {
	print;
}

fail "Unexpected EOF inside fragment" if $inside;
die "Empty overlay\n" unless $n;
